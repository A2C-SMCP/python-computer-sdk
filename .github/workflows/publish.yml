# 文件名: publish.yml / File name: publish.yml
# 作者: JQQ / Author: JQQ
# 创建日期: 2025/09/26 / Created: 2025/09/26
# 最后修改日期: 2025/09/26 / Last Modified: 2025/09/26
# 版权: 2023 JQQ. All rights reserved. / Copyright: 2023 JQQ. All rights reserved.
# 依赖: GitHub Actions, Python 3.11, Poetry, pypa/gh-action-pypi-publish / Deps: GitHub Actions, Python 3.11, Poetry, pypa/gh-action-pypi-publish
# 描述:
#   中文: 基于 GitHub Release 触发，构建并发布到 TestPyPI（预发布）或 PyPI（正式发布）。
#   English: Build and publish to TestPyPI (for prereleases) or PyPI (for final releases) triggered by GitHub Release.

name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read
  # 启用 OIDC 以支持 PyPI Trusted Publishing（无 Token）
  # Enable OIDC for PyPI Trusted Publishing (passwordless)
  id-token: write

jobs:
  build-and-publish:
    name: Build and publish package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install poetry

      - name: Ensure project uses in-project venv (optional)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Validate tag matches project version
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
        run: |
          python - << 'PY'
          import os, sys
          import tomllib
          tag = os.environ.get('TAG_NAME', '')
          if not tag:
              print('No tag found from release context', file=sys.stderr)
              sys.exit(1)
          tag = tag.lstrip('v')
          with open('pyproject.toml', 'rb') as f:
              data = tomllib.load(f)
          ver = data['project']['version']
          if ver != tag:
              print(f'Version mismatch: pyproject {ver} != tag {tag}', file=sys.stderr)
              sys.exit(2)
          print(f'Version OK: {ver}')
          PY

      - name: Install dependencies required to build (no dev/test)
        run: |
          poetry install --no-interaction --only main

      - name: Build sdist and wheel
        run: |
          poetry build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/*

      # 预发布（prerelease）发布到 TestPyPI
      # Publish to TestPyPI when the GitHub Release is marked as prerelease
      - name: Publish to TestPyPI (for prereleases, OIDC/Trusted Publishing)
        if: ${{ github.event.release.prerelease == true }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # 使用 Trusted Publishing 时无需 password；需在 TestPyPI 配置 Trusted Publisher
          # No password needed with Trusted Publishing; configure Trusted Publisher in TestPyPI
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

      # 如需使用 Token 发布到 TestPyPI，请改用下方写法并在仓库 Secrets 配置 TEST_PYPI_API_TOKEN
      # If you prefer Token for TestPyPI, use the step below instead and set TEST_PYPI_API_TOKEN
      # - name: Publish to TestPyPI (Token-based)
      #   if: ${{ github.event.release.prerelease == true }}
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
      #     repository-url: https://test.pypi.org/legacy/
      #     skip-existing: true

      # 正式发布到 PyPI
      # Publish to PyPI when the GitHub Release is not a prerelease
      - name: Publish to PyPI (for final releases, OIDC/Trusted Publishing)
        if: ${{ github.event.release.prerelease == false }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # 使用 Trusted Publishing 时无需 password；需在 PyPI 配置 Trusted Publisher
          # No password needed with Trusted Publishing; configure Trusted Publisher in PyPI
          skip-existing: true

      # 如需使用 Token 发布到 PyPI，请改用下方写法并在仓库 Secrets 配置 PYPI_API_TOKEN
      # If you prefer Token for PyPI, use the step below instead and set PYPI_API_TOKEN
      # - name: Publish to PyPI (Token-based)
      #   if: ${{ github.event.release.prerelease == false }}
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     password: ${{ secrets.PYPI_API_TOKEN }}
      #     skip-existing: true
